package com.myspace.datavalidation;

import com.redhat.demo.blacklistclient.Client;

global Client service;

/*
rule "Name Format Error"
	dialect "mvel"

	when
		Person( name not matches "(([A-Z][a-z]+(-[A-Z][a-z]+)*)\\s+)+([A-Z][a-z]+(-[A-Z][a-z]+)*)$" )
	then
		ValidationError fact = new ValidationError();
		fact.setCause( "Name format error." );
		insert( fact );
		System.out.println("Executed Rule: " + drools.getRule().getName() );
end

rule "Name Capitalisation Error"
	dialect "mvel"

	when
		Person( name matches "-[a-z]" )
	then
		ValidationError fact = new ValidationError();
		fact.setCause( "Name Capitalisation Error." );
		insert( fact );
		System.out.println("Executed Rule: " + drools.getRule().getName() );
end

rule "Name Too Long"
	dialect "mvel"

	when
		Person( name.length() > 40)
	then
		ValidationError fact = new ValidationError();
		fact.setCause( "Name too long." );
		insert( fact );
		System.out.println("Executed Rule: " + drools.getRule().getName() );
end

rule "Name In Blacklist"
	dialect "mvel"
	salience -10

	when
	    not ValidationError();
		$person : Person( )
	then
	    if (service.checkIfOnBlacklist($person.name).equals("yes")) {
		    ValidationError fact = new ValidationError();
		    fact.setCause( "Name In Blacklist" );
		    insert( fact );
	    }
		System.out.println("Executed Rule: " + drools.getRule().getName() );
end
*/
/*
rule "Retract Person after Validation"
	dialect "mvel"

	salience -10
	when
		fact : Person( )
	then
		retract(fact);
		System.out.println("Executed Rule: " + drools.getRule().getName() );
end
*/

query "get_validation_error"
    $error : ValidationError()
end